# 使用Rust官方提供的基础镜像
FROM rust:1.85.1-alpine3.20 as builder
RUN apk add -q --update-cache --no-cache build-base openssl-dev cmake
# 设置工作目录
WORKDIR /app
ENV RUSTFLAGS="-C target-feature=-crt-static"
# 复制项目文件到容器中
COPY . .

# 使用交叉编译工具链进行编译
RUN set -eux; \
        cargo build --bin cts-search-server --release

# 创建最终的镜像
FROM    alpine:3.20
RUN     apk update --quiet \
        && apk add -q --no-cache libgcc tini curl openssl

# 设置工作目录
WORKDIR /app

# 复制编译好的可执行文件到最终镜像中
COPY --from=builder /app/target/release/cts-search-server .
COPY --from=builder /app/config/feature-config.yml ./config/feature-config.yml

EXPOSE  4001/tcp
ENTRYPOINT ["tini", "--"]
# 运行可执行文件
CMD ["./cts-search-server"]